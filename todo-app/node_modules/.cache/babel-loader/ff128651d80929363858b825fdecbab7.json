{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilgehan.akcan\\\\Desktop\\\\ToDoApp\\\\todo-app\\\\src\\\\Components\\\\PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PrivateRoute({\n  component: Component,\n  authed,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => authed === true ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n}\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/bilgehan.akcan/Desktop/ToDoApp/todo-app/src/Components/PrivateRoute.js"],"names":["React","Route","Link","PrivateRoute","component","Component","authed","rest","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,IAAf,QAA0B,kBAA1B;;;AAEA,SAASC,YAAT,CAAuB;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuBC,EAAAA,MAAvB;AAA+B,KAAGC;AAAlC,CAAvB,EAAgE;AAC5D,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAWF,MAAM,KAAK,IAAX,gBACf,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,YADe,gBAEf,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAACC,QAAAA,QAAQ,EAAE,QAAX;AAAqBC,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAA5B;AAAd;AAAA;AAAA;AAAA;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA,UADF;AAQH;;KATQT,Y;AAUT,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport {Route, Link} from 'react-router-dom';\r\n\r\nfunction PrivateRoute ({component: Component, authed, ...rest}) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) => authed === true\r\n          ? <Component {...props} />\r\n          : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\r\n      />\r\n    )\r\n}\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}