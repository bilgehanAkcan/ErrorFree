{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\ErrorFree\\\\todo-app\\\\src\\\\Components\\\\CommentPopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Cookies } from \"react-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CommentPopup(props) {\n  _s();\n\n  const [comment, setComment] = React.useState(\"\");\n\n  async function sendComment() {\n    debugger;\n    console.log(comment);\n    var currentDate = new Date();\n    var errorId = props.whichError;\n    var userId = props.commentOwner;\n    var commentId = props.comment;\n    var date = currentDate.getDate() + \"-\" + (currentDate.getMonth() + 1) + \"-\" + currentDate.getFullYear();\n    const body = {\n      comment,\n      date,\n      errorId,\n      userId,\n      commentId\n    };\n    const response = await fetch(\"http://localhost:5000/extraComment\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n  }\n\n  function insidePopup() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-inner2\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"textarea\",\n          onChange: e => setComment(e.target.value),\n          style: {\n            width: \"400px\",\n            height: \"120px\"\n          },\n          className: \"form-control\",\n          id: \"floatingInput\",\n          step: \"any\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 185\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: sendComment,\n          className: \"btn btn-success\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => props.closePopup(false),\n          className: \"btn btn-danger\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.openPopup ? insidePopup() : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CommentPopup, \"rrFebW9Q28aJJ+M9AxcXUmcj4W0=\");\n\n_c = CommentPopup;\nexport default CommentPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentPopup\");","map":{"version":3,"sources":["C:/Users/User/OneDrive/Masaüstü/ErrorFree/todo-app/src/Components/CommentPopup.js"],"names":["React","Cookies","CommentPopup","props","comment","setComment","useState","sendComment","console","log","currentDate","Date","errorId","whichError","userId","commentOwner","commentId","date","getDate","getMonth","getFullYear","body","response","fetch","method","headers","JSON","stringify","insidePopup","e","target","value","width","height","closePopup","openPopup"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,KAAK,CAACM,QAAN,CAAe,EAAf,CAA9B;;AAEA,iBAAeC,WAAf,GAA6B;AACzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,QAAIM,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACA,QAAIC,OAAO,GAAGT,KAAK,CAACU,UAApB;AACA,QAAIC,MAAM,GAAGX,KAAK,CAACY,YAAnB;AACA,QAAIC,SAAS,GAAGb,KAAK,CAACC,OAAtB;AACA,QAAIa,IAAI,GAAGP,WAAW,CAACQ,OAAZ,KAAwB,GAAxB,IAA+BR,WAAW,CAACS,QAAZ,KAAyB,CAAxD,IAA6D,GAA7D,GAAmET,WAAW,CAACU,WAAZ,EAA9E;AACA,UAAMC,IAAI,GAAG;AAACjB,MAAAA,OAAD;AAAUa,MAAAA,IAAV;AAAgBL,MAAAA,OAAhB;AAAyBE,MAAAA,MAAzB;AAAiCE,MAAAA;AAAjC,KAAb;AACA,UAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,EAAuC;AAC/DC,MAAAA,MAAM,EAAE,MADuD;AAE/DC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFsD;AAG/DJ,MAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHyD,KAAvC,CAA5B;AAKH;;AAED,WAASO,WAAT,GAAuB;AACnB,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,QAAQ,EAAEC,CAAC,IAAIxB,UAAU,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhD;AAAkE,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE,OAAR;AAAiBC,YAAAA,MAAM,EAAE;AAAzB,WAAzE;AAA4G,UAAA,SAAS,EAAC,cAAtH;AAAqI,UAAA,EAAE,EAAC,eAAxI;AAAwJ,UAAA,IAAI,EAAC;AAA7J;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAEwK;AAAA;AAAA;AAAA;AAAA,gBAFxK,eAGI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAE1B,WAA/B;AAA4C,UAAA,SAAS,EAAC,iBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,+BAII;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAE,MAAMJ,KAAK,CAAC+B,UAAN,CAAiB,KAAjB,CAArC;AAA8D,UAAA,SAAS,EAAC,gBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAED,sBACI;AAAA,cACK/B,KAAK,CAACgC,SAAN,GAAkBP,WAAW,EAA7B,GAAkC;AADvC;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GArCQ1B,Y;;KAAAA,Y;AAuCT,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Cookies } from \"react-cookie\";\r\n\r\nfunction CommentPopup(props) {\r\n    const [comment, setComment] = React.useState(\"\");\r\n    \r\n    async function sendComment() {\r\n        debugger;\r\n        console.log(comment);\r\n        var currentDate = new Date();\r\n        var errorId = props.whichError;\r\n        var userId = props.commentOwner;\r\n        var commentId = props.comment;\r\n        var date = currentDate.getDate() + \"-\" + (currentDate.getMonth() + 1) + \"-\" + currentDate.getFullYear();\r\n        const body = {comment, date, errorId, userId, commentId};\r\n        const response = await fetch(\"http://localhost:5000/extraComment\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body)\r\n        });\r\n    }\r\n\r\n    function insidePopup() {\r\n        return (\r\n            <div className=\"popup\">\r\n                <div className=\"popup-inner2\">\r\n                    <br></br>\r\n                    <input type=\"textarea\" onChange={e => setComment(e.target.value)} style={{width: \"400px\", height: \"120px\"}} className=\"form-control\" id=\"floatingInput\" step=\"any\"/><br></br>\r\n                    <button type=\"button\" onClick={sendComment} className=\"btn btn-success\">Add</button>&nbsp;&nbsp;&nbsp;\r\n                    <button type=\"button\" onClick={() => props.closePopup(false)} className=\"btn btn-danger\">Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.openPopup ? insidePopup() : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentPopup;"]},"metadata":{},"sourceType":"module"}