[{"C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\index.js":"1","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\App.js":"2","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\RegistrationPage.js":"3","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\SignInPage.js":"4","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\EditPage.js":"5","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\HomePage.js":"6","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\DetailsPage.js":"7","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\PopupDelete.js":"8","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\NavBar.js":"9","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\Popup.js":"10","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\CommentPopup.js":"11","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\CommentResultPopup.js":"12"},{"size":246,"mtime":1623842806593,"results":"13","hashOfConfig":"14"},{"size":716,"mtime":1624544767464,"results":"15","hashOfConfig":"14"},{"size":2518,"mtime":1624535668314,"results":"16","hashOfConfig":"14"},{"size":2480,"mtime":1624535411255,"results":"17","hashOfConfig":"14"},{"size":1826,"mtime":1624535405201,"results":"18","hashOfConfig":"14"},{"size":5754,"mtime":1624620618072,"results":"19","hashOfConfig":"14"},{"size":4679,"mtime":1624892990129,"results":"20","hashOfConfig":"14"},{"size":1093,"mtime":1624535400105,"results":"21","hashOfConfig":"14"},{"size":1586,"mtime":1624539456200,"results":"22","hashOfConfig":"14"},{"size":1929,"mtime":1624615117747,"results":"23","hashOfConfig":"14"},{"size":1635,"mtime":1624877349477,"results":"24","hashOfConfig":"14"},{"size":1506,"mtime":1624888694552,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"qizj0h",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"28"},"C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\index.js",[],["59","60"],"C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\App.js",["61"],"import './App.css';\nimport {Route, Link} from 'react-router-dom';\nimport RegistrationPage from './Components/RegistrationPage';\nimport SignInPage from \"./Components/SignInPage\";\nimport HomePage from \"./Components/HomePage\";\nimport EditPage from './Components/EditPage';\nimport DetailsPage from './Components/DetailsPage';\n\nfunction App() {\n  return (\n    <div>\n      <Route exact path=\"/\" component={SignInPage} />\n      <Route exact path=\"/RegistrationPage\" component={RegistrationPage} />\n      <Route exact path=\"/HomePage\" component={HomePage} />\n      <Route exact path=\"/EditPage\" component={EditPage} />\n      <Route exact path=\"/DetailsPage\" component={DetailsPage} />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\RegistrationPage.js",["62","63"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {IoIosPerson} from \"react-icons/io\";\r\nimport {AiFillMail} from \"react-icons/ai\";\r\nimport {RiLockPasswordFill} from \"react-icons/ri\";\r\n\r\nfunction RegistrationPage() {\r\n    const [name, setName] = React.useState(\"\");\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [passwordAgain, setPasswordAgain] = React.useState(\"\");\r\n\r\n    async function register(e) {\r\n        if ( password === passwordAgain ) {\r\n            const body = {name,email,password};\r\n            const response = await fetch(\"http://localhost:5000/register\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n            });\r\n            e.preventDefault();\r\n            window.location = \"/\";\r\n        }\r\n        else {\r\n            alert(\"Not confirmed. Please try again.\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={register}>\r\n                <center>\r\n                    <div className=\"mb-3 mt-5\">\r\n                        <h2 className=\"jumbotron\">Sign Up</h2>\r\n                        <table>\r\n                            <tr><td><IoIosPerson></IoIosPerson></td><td><input type=\"text\" className=\"form-control\" onChange={e => setName(e.target.value)} id=\"floatingInput\" placeholder=\"Name\" style={{margin: 10}}/></td></tr>\r\n                            <tr><td><AiFillMail></AiFillMail></td><td><input type=\"text\" className=\"form-control\" onChange={e => setEmail(e.target.value)} id=\"floatingInput\" placeholder=\"Email\" style={{margin: 10}}/></td></tr>\r\n                            <tr><td><RiLockPasswordFill></RiLockPasswordFill></td><td><input type=\"password\" className=\"form-control\" onChange={e => setPassword(e.target.value)} id=\"floatingInput\" placeholder=\"Password\" style={{margin: 10}}/></td></tr>\r\n                            <tr><td><RiLockPasswordFill></RiLockPasswordFill></td><td><input type=\"password\" className=\"form-control\" onChange={e => setPasswordAgain(e.target.value)} id=\"floatingInput\" placeholder=\"Confirm Password\" style={{margin: 10}}/></td></tr>\r\n                        </table>\r\n                        <br></br>\r\n                        <button type=\"submit\" className=\"btn btn-success\">Register</button>\r\n                    </div>\r\n                </center>\r\n            </form >\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegistrationPage;","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\SignInPage.js",["64","65","66","67","68"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {IoIosPerson} from \"react-icons/io\";\r\nimport {AiFillMail} from \"react-icons/ai\";\r\nimport {RiLockPasswordFill} from \"react-icons/ri\";\r\nimport {Link} from \"react-router-dom\";\r\nimport RegistrationPage from \"./RegistrationPage\";\r\nimport {useCookies} from \"react-cookie\";\r\n\r\nfunction SignInPage() {\r\n    const [cookies, setCookie] = useCookies([\"userId\"])\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    var temp;\r\n    var temp2;\r\n\r\n    async function checkLogin(e) {\r\n        e.preventDefault();\r\n        const body = {email, password};\r\n        const response = await fetch('http://localhost:5000/login', {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body)\r\n        }).then(x => x.json())\r\n        .then(data => {\r\n            temp = data.isValid;\r\n            temp2 = data.userId;\r\n            if (temp) {\r\n            }\r\n            else {\r\n                alert(\"Login Failed, Please Try Again\");\r\n                window.location = \"/\";\r\n            }\r\n        });\r\n        setCookie(\"userId\", temp2, {\r\n            path: \"/\"\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <center>\r\n                    <div className=\"mb-3 mt-5\">\r\n                        <h2 className=\"jumbotron\">Sign In</h2>\r\n                        <table>\r\n                            <tr><td><AiFillMail></AiFillMail></td><td><input type=\"text\" onChange={e => setEmail(e.target.value)} className=\"form-control\" id=\"floatingInput\" placeholder=\"Email\" style={{margin: 10}}/></td></tr>\r\n                            <tr><td><RiLockPasswordFill></RiLockPasswordFill></td><td><input type=\"password\" onChange={e => setPassword(e.target.value)} className=\"form-control\" id=\"floatingInput\" placeholder=\"Password\" style={{margin: 10}}/></td></tr>\r\n                        </table>\r\n                        <br></br>\r\n                        \r\n                        <button type=\"submit\" onClick={checkLogin} className=\"btn btn-success\"><Link to=\"HomePage\">Log In</Link></button><br></br><br></br>\r\n                        <p style={{color: \"DarkGrey\"}}>Not registered? <Link to=\"RegistrationPage\">Create an account</Link></p>\r\n                    </div>\r\n                </center>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignInPage;","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\EditPage.js",["69","70"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Navbar from \"./NavBar\";\r\nimport HomePage from \"./HomePage\";\r\nimport { Cookies } from \"react-cookie\";\r\n\r\nfunction EditPage() {\r\n    const cookies = new Cookies();\r\n    const [header, setHeader] = React.useState(\"\");\r\n    const [content, setContent] = React.useState(\"\");\r\n    var currentDate = new Date();\r\n    var date = currentDate.getDate() + \"-\" + (currentDate.getMonth() + 1) + \"-\" + currentDate.getFullYear();\r\n\r\n    async function addError(e) {\r\n        e.preventDefault();\r\n        const userId = cookies.get(\"userId\");\r\n        const body = {header, content, date, userId};\r\n        const response = await fetch('http://localhost:5000/add', {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body)\r\n            });\r\n        const jsonData = response.json();\r\n        console.log(jsonData);\r\n        window.location = \"/HomePage\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar></Navbar>\r\n            <center>\r\n            <div class=\"form-floating mt-5\">\r\n                <input type=\"textarea\" onChange={e => {setHeader(e.target.value)}} style={{width: \"700px\", height: \"70px\"}} class=\"form-control\" id=\"floatingInput\" step=\"any\" placeholder=\"Enter the error header...\"/>\r\n            </div>\r\n            <div class=\"form-floating mt-3\">\r\n                <input type=\"textarea\" onChange={e => {setContent(e.target.value)}} style={{width: \"700px\", height: \"200px\"}} class=\"form-control\" step=\"any\" id=\"floatingPassword\" placeholder=\"Enter the error content...\"/>\r\n            </div>\r\n            <button type=\"button\" onClick={addError} className=\"mt-3 btn btn-success\">Add</button>\r\n            </center>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPage;","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\HomePage.js",["71","72","73","74","75","76"],"import React,{useEffect} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Navbar from \"./NavBar\";\r\nimport {BiEdit} from \"react-icons/bi\";\r\nimport {RiDeleteBin5Line} from \"react-icons/ri\";\r\nimport Popup from \"./Popup\";\r\nimport PopupDelete from \"./PopupDelete\";\r\nimport {FcPlus} from \"react-icons/fc\";\r\nimport { Cookies } from \"react-cookie\";\r\nimport {AiOutlineInfoCircle} from \"react-icons/ai\";\r\nimport {Link} from \"react-router-dom\"\r\nimport DetailsPage from \"./DetailsPage\";\r\nimport {useCookies} from \"react-cookie\";\r\n\r\nfunction HomePage() {\r\n    const cookies = new Cookies();\r\n    const [cookies2, setCookie] = useCookies([\"errorId\"]);\r\n    const userId = cookies.get(\"userId\");\r\n    const [errorList, setErrorList] = React.useState([]);\r\n    const [search, setSearch] = React.useState(\"\");\r\n    const [searchResult, setSearchResult] = React.useState([]);\r\n    const [validation, setValidation] = React.useState(false);\r\n    const [popup, setPopup] = React.useState(false);\r\n    const [popup2, setPopup2] = React.useState(false);\r\n    const [temp, deleteId] = React.useState(0);\r\n    const [temp2, setTemp2] = React.useState([]);\r\n\r\n    async function sendSearch(e) {\r\n        e.preventDefault();\r\n        const body = {search};\r\n        const response = await fetch('http://localhost:5000/search', {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body)\r\n            })\r\n        const jsonData = await response.json();\r\n        for (let data of jsonData) {\r\n            var errorDate = new Date(data.errorDate);\r\n            data.errorDateStr = errorDate.getDate() + \"-\" + (errorDate.getMonth() + 1) + \"-\" + errorDate.getFullYear()\r\n        }\r\n        setSearchResult(jsonData);\r\n        setValidation(true);\r\n    }\r\n    \r\n    async function getError() {\r\n        setValidation(false);\r\n        const response = await fetch(\"http://localhost:5000/error\");\r\n        const jsonData = await response.json();\r\n        for (let data of jsonData) {\r\n            var errorDate = new Date(data.errorDate);\r\n            data.errorDateStr = errorDate.getDate() + \"-\" + (errorDate.getMonth() + 1) + \"-\" + errorDate.getFullYear()\r\n        }\r\n        setErrorList(jsonData);\r\n    }\r\n    \r\n\r\n    function errorCookie(x) {\r\n        setCookie(\"errorId\", x.id, {\r\n            path: \"/\"\r\n        });\r\n    }\r\n\r\n    function enableButtons(x) {\r\n        if ( x.userId == userId ) {\r\n            return (\r\n                    <td>\r\n                        <button type=\"button\" onClick={() => {deleteId(x.id); setTemp2(x); setPopup(true)}} className=\"btn btn-warning btn-default btn-sm\">\r\n                            <BiEdit></BiEdit>&nbsp;&nbsp;Edit\r\n                        </button>&nbsp;\r\n                        <button type=\"button\" onClick={() => {deleteId(x.id); setPopup2(true)}} className=\"btn btn-default btn-danger btn-sm\">\r\n                            <RiDeleteBin5Line></RiDeleteBin5Line>&nbsp;&nbsp;Delete\r\n                        </button>&nbsp;\r\n                        <button type=\"button\" onClick={() => {errorCookie(x)}} className=\"btn btn-default btn-info btn-sm\">\r\n                            <AiOutlineInfoCircle></AiOutlineInfoCircle>&nbsp;&nbsp;<Link to=\"/DetailsPage\">See Details</Link>\r\n                        </button>&nbsp;&nbsp;&nbsp;\r\n                    </td>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <td>\r\n                    <button type=\"button\" onClick={() => {errorCookie(x)}} className=\"btn btn-default btn-info btn-sm\">\r\n                        <AiOutlineInfoCircle></AiOutlineInfoCircle>&nbsp;&nbsp;<Link to=\"/DetailsPage\">See Details</Link>\r\n                    </button>&nbsp;&nbsp;&nbsp;\r\n                </td>\r\n            );\r\n        }\r\n    }\r\n\r\n    function printAll(x) {\r\n        return (\r\n                <tr className=\"table-tr\">\r\n                    <td className=\"table-td\">{x.errorDateStr}</td>\r\n                    <td className=\"table-td\">{x.errorName}</td>\r\n                    <td className=\"table-td\">{x.errorContent}</td>\r\n                    {enableButtons(x)}\r\n                </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div> \r\n            <Navbar></Navbar><br></br>\r\n            <center><button type=\"button\" onClick={getError}>List All Errors</button></center>\r\n            <nav className=\"navbar navbar-light mt-3\">\r\n                <div className=\"mx-auto\" style={{width:\"500px\"}}> \r\n                    <form className=\"d-flex\">\r\n                    <input className=\"form-control me-2\" onChange={e => setSearch(e.target.value)} type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                        <button className=\"btn btn-outline-success ml-1\" onClick={sendSearch} type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n            <br></br>\r\n            <br></br>\r\n            <center>\r\n                <table className=\"error-table\">\r\n                    <tr className=\"table-tr\">\r\n                        <th className=\"table-td\">Date</th>\r\n                        <th className=\"table-td\">Error Header</th>\r\n                        <th className=\"table-td\">Error</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    {validation === false ? errorList.map(printAll) : searchResult.map(printAll)}\r\n                </table>\r\n                <Popup errorElements={temp2} deleteId ={temp} trigger={popup} setTrigger={setPopup} onUpdated={() => getError()}></Popup>\r\n                <PopupDelete deleteId={temp} trigger2={popup2} setTrigger2={setPopup2} onUpdated={() => getError()}></PopupDelete>\r\n            </center>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\DetailsPage.js",["77","78","79","80"],"C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\PopupDelete.js",[],"C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\NavBar.js",["81","82","83"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { Cookies } from \"react-cookie\";\r\n\r\nfunction NavBar() {\r\n    const cookies = new Cookies();\r\n    const userId = cookies.get(\"userId\");\r\n\r\n    async function logout() {\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-md navbar-light bg-secondary py-3\">\r\n                <a className=\"navbar-text-color\">ErrorFree!</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active ml-5\">\r\n                            <Link to=\"HomePage\" className=\"navbar-text-color\">Home<span class=\"sr-only\">(current)</span></Link>\r\n                        </li>\r\n                        <li className=\"nav-item ml-5\">\r\n                            <Link to=\"EditPage\" className=\"navbar-text-color\">Add</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"\" onClick={logout} className=\"navbar-text-color\">Log Out</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>);\r\n}\r\n\r\nexport default NavBar;","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\Popup.js",[],"C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\CommentPopup.js",["84","85"],"import React from \"react\";\r\nimport { Cookies } from \"react-cookie\";\r\n\r\nfunction CommentPopup(props) {\r\n    const [comment, setComment] = React.useState(\"\");\r\n    \r\n    async function sendComment() {\r\n        debugger;\r\n        console.log(comment);\r\n        var currentDate = new Date();\r\n        var errorId = props.whichError;\r\n        var userId = props.commentOwner;\r\n        var commentId = props.comment;\r\n        var date = currentDate.getDate() + \"-\" + (currentDate.getMonth() + 1) + \"-\" + currentDate.getFullYear();\r\n        const body = {comment, date, errorId, userId, commentId};\r\n        const response = await fetch(\"http://localhost:5000/extraComment\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body)\r\n        });\r\n    }\r\n\r\n    function insidePopup() {\r\n        return (\r\n            <div className=\"popup\">\r\n                <div className=\"popup-inner2\">\r\n                    <br></br>\r\n                    <input type=\"textarea\" onChange={e => setComment(e.target.value)} style={{width: \"400px\", height: \"120px\"}} className=\"form-control\" id=\"floatingInput\" step=\"any\"/><br></br>\r\n                    <button type=\"button\" onClick={sendComment} className=\"btn btn-success\">Add</button>&nbsp;&nbsp;&nbsp;\r\n                    <button type=\"button\" onClick={() => props.closePopup(false)} className=\"btn btn-danger\">Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.openPopup ? insidePopup() : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentPopup;","C:\\Users\\bilgehan.akcan\\Desktop\\ToDoApp\\todo-app\\src\\Components\\CommentResultPopup.js",["86","87"],"import React, {useEffect} from \"react\";\r\nimport { Cookies } from \"react-cookie\";\r\n\r\nfunction CommentResultPopup(props) {\r\n    const [childComments, setChildComments] = React.useState([]);\r\n\r\n    function printOneByOne(x) {\r\n        return (\r\n            <tr>\r\n                <td><strong>{x.whoseComment}:</strong>&emsp;</td>\r\n                <td>{x.comment}&emsp;</td>\r\n                <td className=\"columnWidth\">({x.commentDate})</td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    async function getAllComments() {\r\n        var commentId = props.comment;\r\n        const response = await fetch(\"http://localhost:5000/childComments/\" + commentId);\r\n        const jsonData = await response.json();\r\n        setChildComments(jsonData);\r\n    }\r\n\r\n    function insidePopup() {\r\n        return (\r\n            <div className=\"popup\">\r\n                <div className=\"popup-inner2\">\r\n                    <br></br>\r\n                    {getAllComments() ? \r\n                    <div>\r\n                        <table style={{maxWidth:\"1200px\"}}>\r\n                            {childComments.map(printOneByOne)}\r\n                        </table>\r\n                    </div> : null}\r\n                    <button type=\"button\" onClick={() => props.closePopup(false)} className=\"btn btn-danger\">Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.openPopup ? insidePopup() : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentResultPopup;",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":2,"column":16,"nodeType":"94","messageId":"95","endLine":2,"endColumn":20},{"ruleId":"92","severity":1,"message":"96","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"92","severity":1,"message":"97","line":16,"column":19,"nodeType":"94","messageId":"95","endLine":16,"endColumn":27},{"ruleId":"92","severity":1,"message":"96","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"92","severity":1,"message":"98","line":3,"column":9,"nodeType":"94","messageId":"95","endLine":3,"endColumn":20},{"ruleId":"92","severity":1,"message":"99","line":7,"column":8,"nodeType":"94","messageId":"95","endLine":7,"endColumn":24},{"ruleId":"92","severity":1,"message":"100","line":11,"column":12,"nodeType":"94","messageId":"95","endLine":11,"endColumn":19},{"ruleId":"92","severity":1,"message":"97","line":20,"column":15,"nodeType":"94","messageId":"95","endLine":20,"endColumn":23},{"ruleId":"92","severity":1,"message":"96","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"92","severity":1,"message":"101","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":16},{"ruleId":"92","severity":1,"message":"102","line":1,"column":15,"nodeType":"94","messageId":"95","endLine":1,"endColumn":24},{"ruleId":"92","severity":1,"message":"96","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"92","severity":1,"message":"103","line":8,"column":9,"nodeType":"94","messageId":"95","endLine":8,"endColumn":15},{"ruleId":"92","severity":1,"message":"104","line":12,"column":8,"nodeType":"94","messageId":"95","endLine":12,"endColumn":19},{"ruleId":"92","severity":1,"message":"105","line":17,"column":12,"nodeType":"94","messageId":"95","endLine":17,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":64,"column":23,"nodeType":"108","messageId":"109","endLine":64,"endColumn":25},{"ruleId":"92","severity":1,"message":"110","line":12,"column":12,"nodeType":"94","messageId":"95","endLine":12,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":26,"column":10,"nodeType":"113","endLine":26,"endColumn":12,"suggestions":"114"},{"ruleId":"106","severity":1,"message":"107","line":37,"column":32,"nodeType":"108","messageId":"109","endLine":37,"endColumn":34},{"ruleId":"92","severity":1,"message":"97","line":78,"column":15,"nodeType":"94","messageId":"95","endLine":78,"endColumn":23},{"ruleId":"92","severity":1,"message":"96","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"92","severity":1,"message":"115","line":8,"column":11,"nodeType":"94","messageId":"95","endLine":8,"endColumn":17},{"ruleId":"116","severity":1,"message":"117","line":16,"column":17,"nodeType":"118","endLine":16,"endColumn":50},{"ruleId":"92","severity":1,"message":"119","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":17},{"ruleId":"92","severity":1,"message":"97","line":16,"column":15,"nodeType":"94","messageId":"95","endLine":16,"endColumn":23},{"ruleId":"92","severity":1,"message":"102","line":1,"column":16,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"119","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":17},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'response' is assigned a value but never used.","'IoIosPerson' is defined but never used.","'RegistrationPage' is defined but never used.","'cookies' is assigned a value but never used.","'HomePage' is defined but never used.","'useEffect' is defined but never used.","'FcPlus' is defined but never used.","'DetailsPage' is defined but never used.","'cookies2' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'cookies3' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllComments' and 'showDetails'. Either include them or remove the dependency array.","ArrayExpression",["122"],"'userId' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Cookies' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [getAllComments, showDetails]",{"range":"125","text":"126"},[1012,1014],"[getAllComments, showDetails]"]